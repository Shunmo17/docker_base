name: Build Base Images

on:
  push:
    branches:
      - master
      - devel

jobs:
# ===============================================================
#   Building Ubuntu Base Image 
# ===============================================================
  build_ubuntu20:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ubuntu:${{ env.UBUNTU }}
          file: ./dockerfiles/Dockerfile.base

  build_ubuntu20_cuda117:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 20.04
      CUDA: 11.7
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=nvidia/cuda:11.7.1-devel-ubuntu${{ env.UBUNTU }}
          file: ./dockerfiles/Dockerfile.base

  build_ubuntu20_nvidia_egl:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/nvidia-egl:ubuntu${{ env.UBUNTU }}-cuda11.0
          build-args: |
            BASE_IMAGE=ghcr.io/selkies-project/nvidia-egl-desktop:${{ env.UBUNTU }}
          file: ./dockerfiles/Dockerfile.base

  build_ubuntu22:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ubuntu:${{ env.UBUNTU }}
          file: ./dockerfiles/Dockerfile.base

  build_ubuntu22_cuda117:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 22.04
      CUDA: 11.7
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=nvidia/cuda:11.7.1-devel-ubuntu${{ env.UBUNTU }}
          file: ./dockerfiles/Dockerfile.base

  build_ubuntu22_nvidia_egl:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/nvidia-egl:ubuntu${{ env.UBUNTU }}-cuda11.0
          build-args: |
            BASE_IMAGE=ghcr.io/selkies-project/nvidia-egl-desktop:${{ env.UBUNTU }}
          file: ./dockerfiles/Dockerfile.base

# ===============================================================
#   Building ROS1 Base Image
# ===============================================================
  build_ros1_noetic:
    runs-on: ubuntu-latest
    needs: build_ubuntu20
    env:
      UBUNTU: 20.04
      ROS_DISTRO: noetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./dockerfiles/Dockerfile.ros1

  build_ros1_noetic_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu20_cuda117
    env:
      UBUNTU: 20.04
      CUDA: 11.7
      ROS_DISTRO: noetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1:${{ env.ROS_DISTRO }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}-cuda${{ env.CUDA }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./dockerfiles/Dockerfile.ros1

  build_ros1_noetic_nvidia_egl:
    runs-on: ubuntu-latest
    needs: build_ubuntu20_nvidia_egl
    env:
      UBUNTU: 20.04
      ROS_DISTRO: noetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1:${{ env.ROS_DISTRO }}-nvidia-egl-cuda11.0
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/nvidia-egl:ubuntu${{ env.UBUNTU }}-cuda11.0
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./dockerfiles/Dockerfile.ros1

# ===============================================================
#   Building ROS2 Base Image 
# ===============================================================
  build_ros2_humble:
    runs-on: ubuntu-latest
    needs: build_ubuntu22
    env:
      UBUNTU: 22.04
      ROS_DISTRO: humble
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/ros2:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./dockerfiles/Dockerfile.ros2

  build_ros2_humble_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu22_cuda117
    env:
      UBUNTU: 22.04
      CUDA: 11.7
      ROS_DISTRO: humble
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/ros2:${{ env.ROS_DISTRO }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/base:ubuntu${{ env.UBUNTU }}-cuda${{ env.CUDA }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./dockerfiles/Dockerfile.ros2

  build_ros2_noetic_nvidia_egl:
    runs-on: ubuntu-latest
    needs: build_ubuntu22_nvidia_egl
    env:
      UBUNTU: 22.04
      ROS_DISTRO: humble
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/shunmo17/ros2:${{ env.ROS_DISTRO }}-nvidia-egl-cuda11.0
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/nvidia-egl:ubuntu${{ env.UBUNTU }}-cuda11.0
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./dockerfiles/Dockerfile.ros2
