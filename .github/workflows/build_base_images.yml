name: Build Base Images

on:
  push:
    branches:
      - master
      - devel

jobs:
# ===============================================================
#   Building Ubuntu Base Image 
# ===============================================================
  build_ubuntu16:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 16.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ubuntu:${{ env.UBUNTU }}
            UBUNTU=${{ env.UBUNTU }}
          file: ./ubuntu/Dockerfile

  build_ubuntu18:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ubuntu:${{ env.UBUNTU }}
            UBUNTU=${{ env.UBUNTU }}
          file: ./ubuntu/Dockerfile
  
  build_ubuntu20:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ubuntu:${{ env.UBUNTU }}
            UBUNTU=${{ env.UBUNTU }}
          file: ./ubuntu/Dockerfile

  build_ubuntu16_cuda:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 16.04
      CUDA: 10.1-devel
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=nvidia/cuda:${{ env.CUDA }}-ubuntu${{ env.UBUNTU }}
            UBUNTU=${{ env.UBUNTU }}
          file: ./ubuntu/Dockerfile

  build_ubuntu18_cuda:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 18.04
      CUDA: 10.1-devel
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=nvidia/cuda:${{ env.CUDA }}-ubuntu${{ env.UBUNTU }}
            UBUNTU=${{ env.UBUNTU }}
          file: ./ubuntu/Dockerfile
  
  build_ubuntu20_cuda:
    runs-on: ubuntu-latest
    env:
      UBUNTU: 20.04
      CUDA: 11.0-devel
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=nvidia/cuda:${{ env.CUDA }}-ubuntu${{ env.UBUNTU }}
            UBUNTU=${{ env.UBUNTU }}
          file: ./ubuntu/Dockerfile

# ===============================================================
#   Building NVIDIA Base Image 
# ===============================================================
  build_ubuntu16_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu16
    env:
      UBUNTU: 16.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
          file: ./nvidia/Dockerfile

  build_ubuntu18_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu18
    env:
      UBUNTU: 18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
          file: ./nvidia/Dockerfile

  build_ubuntu20_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu20
    env:
      UBUNTU: 20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
          file: ./nvidia/Dockerfile

  build_ubuntu16_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu16_cuda
    env:
      UBUNTU: 16.04
      CUDA: 10.1-devel
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          file: ./nvidia/Dockerfile

  build_ubuntu18_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu18_cuda
    env:
      UBUNTU: 18.04
      CUDA: 10.1-devel
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          file: ./nvidia/Dockerfile

  build_ubuntu20_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu20_cuda
    env:
      UBUNTU: 20.04
      CUDA: 11.0-devel
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
          file: ./nvidia/Dockerfile

# ===============================================================
#   Building ROS1 Base Image
# ===============================================================
  build_ros1_kinetic:
    runs-on: ubuntu-latest
    needs: build_ubuntu16
    env:
      UBUNTU: 16.04
      ROS_DISTRO: kinetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_melodic:
    runs-on: ubuntu-latest
    needs: build_ubuntu18
    env:
      UBUNTU: 18.04
      ROS_DISTRO: melodic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_noetic:
    runs-on: ubuntu-latest
    needs: build_ubuntu20
    env:
      UBUNTU: 20.04
      ROS_DISTRO: noetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_kinetic_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu16_nvidia
    env:
      UBUNTU: 16.04
      ROS_DISTRO: kinetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1.nvidia:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_melodic_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu18_nvidia
    env:
      UBUNTU: 18.04
      ROS_DISTRO: melodic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1.nvidia:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_noetic_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu20_nvidia
    env:
      UBUNTU: 20.04
      ROS_DISTRO: noetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1.nvidia:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_kinetic_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu16_nvidia_cuda
    env:
      UBUNTU: 16.04
      CUDA: 10.1-devel
      ROS_DISTRO: kinetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1.nvidia:${{ env.ROS_DISTRO }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_melodic_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu18_nvidia_cuda
    env:
      UBUNTU: 18.04
      CUDA: 10.1-devel
      ROS_DISTRO: melodic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1.nvidia:${{ env.ROS_DISTRO }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

  build_ros1_noetic_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu20_nvidia_cuda
    env:
      UBUNTU: 20.04
      CUDA: 11.0-devel
      ROS_DISTRO: noetic
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros1.nvidia:${{ env.ROS_DISTRO }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros1/Dockerfile

# ===============================================================
#   Building ROS2 Base Image 
# ===============================================================
  build_ros2_dashing:
    runs-on: ubuntu-latest
    needs: build_ubuntu18
    env:
      UBUNTU: 18.04
      ROS_DISTRO: dashing
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros2:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros2/Dockerfile

  build_ros2_dashing_nvidia:
    runs-on: ubuntu-latest
    needs: build_ubuntu18_nvidia
    env:
      UBUNTU: 18.04
      ROS_DISTRO: dashing
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros2.nvidia:${{ env.ROS_DISTRO }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros2/Dockerfile

  build_ros2_dashing_nvidia_cuda:
    runs-on: ubuntu-latest
    needs: build_ubuntu18_nvidia_cuda
    env:
      UBUNTU: 18.04
      CUDA: 10.1-devel
      ROS_DISTRO: dashing
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          tag_with_ref: true

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/shunmo17/ros2.nvidia:${{ env.ROS_DISTRO }}-cuda${{ env.CUDA }}
          build-args: |
            BASE_IMAGE=ghcr.io/shunmo17/ubuntu.nvidia:${{ env.UBUNTU }}-cuda${{ env.CUDA }}
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          file: ./ros2/Dockerfile
